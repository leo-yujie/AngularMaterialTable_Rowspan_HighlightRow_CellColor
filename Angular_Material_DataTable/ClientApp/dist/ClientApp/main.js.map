{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/todo/todo.component.css","webpack:///./src/app/components/todo/todo.component.html","webpack:///./src/app/components/todo/todo.component.ts","webpack:///./src/app/services/todo/todo.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  //templateUrl: './app.component.html',\n  //template: `<app-article></app-article>`,\n  //template: `<app-fetch-data></app-fetch-data>`,\n  template: `<app-todo></app-todo>`,\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ClientApp';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { HttpClientModule } from '@angular/common/http';\nimport { TodoComponent } from './components/todo/todo.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TodoComponent\n  ],\n  imports: [\n    HttpClientModule,\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatTableModule,\n    MatSortModule,\r\n    MatPaginatorModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".selected {\\r\\n  background-color: red;\\r\\n}\\r\\n.mat-row.highlighted {\\r\\n  background: lightblue;\\r\\n}\\r\\ntable {\\r\\n  width: 100%;\\r\\n  overflow-x: auto;\\r\\n  overflow-y: hidden;\\r\\n  min-width: 500px;\\r\\n}\\r\\n.mat-header-cell, .mat-sort-header {\\r\\n  background-color: darksalmon;\\r\\n}\\r\\n:host ::ng-deep .mat-sort-header-container {\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  font-size: medium;\\r\\n  font-weight: bold;\\r\\n  text-decoration:underline;\\r\\n}\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy90b2RvL3RvZG8uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLHFCQUFxQjtBQUN2QjtBQUNBO0VBQ0UscUJBQXFCO0FBQ3ZCO0FBRUE7RUFDRSxXQUFXO0VBQ1gsZ0JBQWdCO0VBQ2hCLGtCQUFrQjtFQUNsQixnQkFBZ0I7QUFDbEI7QUFFQTtFQUNFLDRCQUE0QjtBQUM5QjtBQUVBO0VBQ0UsYUFBYTtFQUNiLHVCQUF1QjtFQUN2QixpQkFBaUI7RUFDakIsaUJBQWlCO0VBQ2pCLHlCQUF5QjtBQUMzQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdG9kby90b2RvLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc2VsZWN0ZWQge1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHJlZDtcclxufVxyXG4ubWF0LXJvdy5oaWdobGlnaHRlZCB7XHJcbiAgYmFja2dyb3VuZDogbGlnaHRibHVlO1xyXG59XHJcblxyXG50YWJsZSB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgb3ZlcmZsb3cteDogYXV0bztcclxuICBvdmVyZmxvdy15OiBoaWRkZW47XHJcbiAgbWluLXdpZHRoOiA1MDBweDtcclxufVxyXG5cclxuLm1hdC1oZWFkZXItY2VsbCwgLm1hdC1zb3J0LWhlYWRlciB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogZGFya3NhbG1vbjtcclxufVxyXG5cclxuOmhvc3QgOjpuZy1kZWVwIC5tYXQtc29ydC1oZWFkZXItY29udGFpbmVyIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIGZvbnQtc2l6ZTogbWVkaXVtO1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gIHRleHQtZGVjb3JhdGlvbjp1bmRlcmxpbmU7XHJcbn1cclxuXHJcbiJdfQ== */\"","module.exports = \"<div class=\\\"mat-elevation-z8\\\">\\r\\n  <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"mat-elevation-z8\\\" border=\\\"1\\\">\\r\\n\\r\\n    <ng-container matColumnDef=\\\"userId\\\">\\r\\n      <tr>\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> User Id </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element; let i = index\\\"\\r\\n            [style.display]=\\\"getRowSpan('userId', i) ? '' : 'none'\\\"\\r\\n            [attr.rowspan]=\\\"getRowSpan('userId', i)\\\">\\r\\n          {{element.userId}}\\r\\n        </td>\\r\\n      </tr>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"id\\\">\\r\\n      <tr>\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Id </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.id}} </td>\\r\\n      </tr>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"title\\\">\\r\\n      <tr>\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Title </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.title}} </td>\\r\\n      <tr>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"completed\\\">\\r\\n      <tr>\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Completed </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\" [ngStyle]=\\\"{'background-color': element.completed === true ? 'green' : 'red'}\\\"> {{element.completed}} </td>\\r\\n      <tr>\\r\\n    </ng-container>\\r\\n\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" [ngClass]=\\\"{highlighted: selectedRowIndex == row.id}\\\" (mouseover)=\\\"highlight(row)\\\"></tr>\\r\\n  </table>\\r\\n  <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20, 30, 40, 50]\\\" showFirstLastButtons></mat-paginator>\\r\\n</div>\\r\\n\"","//Ref : https://stackblitz.com/edit/angular-lnahlh?file=app%2Ftable-basic-example.ts\n\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource, MatSort, MatPaginator } from '@angular/material';\nimport { TodoService } from '../../services/todo/todo.service';\nimport { ToDo } from 'src/app/services/todo/todo';\r\n\n@Component({\n  selector: 'app-todo',\n  templateUrl: './todo.component.html',\n  styleUrls: ['./todo.component.css']\n})\nexport class TodoComponent implements OnInit {\n\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  spanningColumns = ['id'];\n  spans = [];\n\n  DATA: ToDo[];\n\n  constructor(private todoService: TodoService) {\n  }\n\n  displayedColumns: string[] = ['userId', 'id', 'title', 'completed'];\r\n\r\n  dataSource = new MatTableDataSource();\n\n  ngOnInit() {\n    this.RenderDataTable();\n  }\n\n  private RenderDataTable() {\r\n    this.todoService.getToDos()\r\n      .subscribe(\r\n        res => {\r\n          this.DATA = res;\r\n          this.dataSource.data = res;\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n          this.spanRow('userId', d => d.userId);\r\n        },\r\n        error => {\r\n          console.log('There was an error while retrieving ToDos !' + error);\r\n        });\r\n  }\n\n  /**\r\n   * Evaluated and store an evaluation of the rowspan for each row.\r\n   * The key determines the column it affects, and the accessor determines the\r\n   * value that should be checked for spanning.\r\n   */\r\n   spanRow(key, accessor) {\r\n    for (let i = 0; i < this.DATA.length;) {\r\n      let currentValue = accessor(this.DATA[i]);\r\n      let count = 1;\r\n\r\n      // Iterate through the remaining rows to see how many match\r\n      // the current value as retrieved through the accessor.\r\n      for (let j = i + 1; j < this.DATA.length; j++) {\r\n        if (currentValue != accessor(this.DATA[j])) {\r\n          break;\r\n        }\r\n\r\n        count++;\r\n      }\r\n\r\n      if (!this.spans[i]) {\r\n        this.spans[i] = {};\r\n      }\r\n\r\n      // Store the number of similar values that were found (the span)\r\n      // and skip i to the next unique row.\r\n      this.spans[i][key] = count;\r\n      i += count;\r\n    }\r\n  }\r\n\r\n  getRowSpan(col, index) {\r\n    return this.spans[index] && this.spans[index][col];\r\n  }\n\n  selectedRow: any;\n\n  selectedRowIndex: number;\n\n  highlight(row) {\r\n    this.selectedRowIndex = row.id;\r\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { ToDo } from './todo';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TodoService {\n\n  public todos: ToDo[];\n\n  constructor(private http: HttpClient) { }\n\n  public getToDos() {\r\n    return this.http.get('https://jsonplaceholder.typicode.com/todos').pipe(map((response: ToDo[]) => response));\r\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nimport \"hammerjs\";\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}